paths:
  /users:
    get:
      summary: Retrieve a list of users
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        200:
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                    password:
                      type: string
    delete:
      summary: Delete an existing user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: User deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /users/{username}:
      put:
        summary: Update an existing user
        tags: [Users]
        parameters:
          - in: path
            name: username
            schema:
              type: string
            required: true
            description: The user ID
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
        responses:
          200:
            description: The updated user.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    username:
                      type: string
                    password:
                      type: string
          404:
            description: User not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string

  /users/register:
    post:
      summary: Create a new user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: The created user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string

  /users/login:
    post:
      summary: Login a user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: The logged in user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
        404:
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /users/logout:
    get:
      tags: [Users]
      summary: Logs out a user
      description: Removes the refresh token cookie and invalidates the session.
      responses:
        204:
          description: Successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logout successful"
      400:
        description: Bad Request
      401:
        description: Unauthorized
      500:
        description: Internal Server Error

  /users/forgot-password:
    post:
      summary: Forgot password
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        200:
          description: The password has been sent to the email.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /users/change-password:
    put:
      summary: Change password
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                newPassword:
                  type: string
      responses:
        200:
          description: The password has been changed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /users/refresh-token:
    get:
      summary: "Handle refresh token"
      tags: [Users]
      responses:
        200:
          description: "New access token generated"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "New Access Token Generated"
                  accessToken:
                    type: string
                    example: "new-access-token"
        401:
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        403:
          description: "Forbidden"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Forbidden"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal Server Error"

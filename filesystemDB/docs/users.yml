paths:
  /users:
    get:
      summary: Retrieve a list of users
      tags: [Users]
      responses:
        200:
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                    password:
                      type: string

  /users/register:
    post:
      summary: Create a new user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: The created user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string

  /users/login:
    post:
      summary: Login a user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: The logged in user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
        404:
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /users/forgot-password:
    post:
      summary: Forgot password
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        200:
          description: The password has been sent to the email.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /users/change-password:
    put:
      summary: Change password
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                newPassword:
                  type: string
      responses:
        200:
          description: The password has been changed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /users/{id}:
    put:
      summary: Update an existing user
      tags: [Users]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: The updated user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
        404:
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    delete:
      summary: Delete an existing user
      tags: [Users]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The user ID
      responses:
        200:
          description: User deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
